{"ast":null,"code":"var _jsxFileName = \"D:\\\\Woooork\\\\Required 5 projects\\\\Chef cloud app\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport IngredientsList from \"../components/IngredientsList\";\nimport ClaudeRecipe from \"../components/ClaudeRecipe\";\nimport { getRecipeFromChefClaude, getRecipeFromMistral } from \"../ai\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [ingredients, setIngredients] = React.useState([\"chicken\", \"all the main spices\", \"corn\", \"heavy cream\", \"pasta\"]);\n  const [recipe, setRecipe] = React.useState(\"\");\n  async function getRecipe() {\n    const recipeMarkdown = await getRecipeFromChefClaude(ingredients);\n    setRecipe(recipeMarkdown);\n  }\n  function addIngredient(formData) {\n    const newIngredient = formData.get(\"ingredient\");\n    setIngredients(prevIngredients => [...prevIngredients, newIngredient]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: addIngredient,\n      className: \"ingredients-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"ingredient\",\n        type: \"text\",\n        placeholder: \"e.g. oregano\",\n        \"aria-label\": \"Add ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ Add Ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), ingredients.length > 0 && /*#__PURE__*/_jsxDEV(IngredientsList, {\n        ingredients: ingredients,\n        getRecipe: getRecipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), recipe && /*#__PURE__*/_jsxDEV(ClaudeRecipe, {\n        recipe: recipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"i05ZTAFR41WUj0Dn9L++APhQ1ik=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["IngredientsList","ClaudeRecipe","getRecipeFromChefClaude","getRecipeFromMistral","React","jsxDEV","_jsxDEV","Main","_s","ingredients","setIngredients","useState","recipe","setRecipe","getRecipe","recipeMarkdown","addIngredient","formData","newIngredient","get","prevIngredients","children","action","className","name","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/Woooork/Required 5 projects/Chef cloud app/src/components/Main.jsx"],"sourcesContent":["import IngredientsList from \"../components/IngredientsList\";\r\nimport ClaudeRecipe from \"../components/ClaudeRecipe\";\r\nimport { getRecipeFromChefClaude, getRecipeFromMistral } from \"../ai\";\r\nimport React from \"react\";\r\n\r\nexport default function Main(){\r\n    const [ingredients, setIngredients] = React.useState(\r\n        [\"chicken\", \"all the main spices\", \"corn\", \"heavy cream\", \"pasta\"]\r\n    )\r\n    const [recipe, setRecipe] = React.useState(\"\")\r\n\r\n    async function getRecipe() {\r\n        const recipeMarkdown = await getRecipeFromChefClaude(ingredients)\r\n        setRecipe(recipeMarkdown)\r\n    }\r\n\r\n    function addIngredient(formData) {\r\n        const newIngredient = formData.get(\"ingredient\")\r\n        setIngredients(prevIngredients => [...prevIngredients, newIngredient])\r\n    }\r\n\r\n    return(\r\n        <main>\r\n            <form action={addIngredient} className=\"ingredients-form\">\r\n                <input \r\n                    name=\"ingredient\"  \r\n                    type=\"text\"\r\n                    placeholder=\"e.g. oregano\"\r\n                    aria-label=\"Add ingredient\"/>\r\n                <button>\r\n                    + Add Ingredient\r\n                </button>\r\n                {ingredients.length > 0 &&\r\n                    <IngredientsList\r\n                        ingredients={ingredients}\r\n                        getRecipe={getRecipe}\r\n                    />\r\n                }\r\n\r\n                {recipe && <ClaudeRecipe recipe={recipe} />}\r\n            </form>\r\n        </main>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,uBAAuB,EAAEC,oBAAoB,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAChD,CAAC,SAAS,EAAE,qBAAqB,EAAE,MAAM,EAAE,aAAa,EAAE,OAAO,CACrE,CAAC;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAE9C,eAAeG,SAASA,CAAA,EAAG;IACvB,MAAMC,cAAc,GAAG,MAAMb,uBAAuB,CAACO,WAAW,CAAC;IACjEI,SAAS,CAACE,cAAc,CAAC;EAC7B;EAEA,SAASC,aAAaA,CAACC,QAAQ,EAAE;IAC7B,MAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAG,CAAC,YAAY,CAAC;IAChDT,cAAc,CAACU,eAAe,IAAI,CAAC,GAAGA,eAAe,EAAEF,aAAa,CAAC,CAAC;EAC1E;EAEA,oBACIZ,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAMgB,MAAM,EAAEN,aAAc;MAACO,SAAS,EAAC,kBAAkB;MAAAF,QAAA,gBACrDf,OAAA;QACIkB,IAAI,EAAC,YAAY;QACjBC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAc;QAC1B,cAAW;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjCxB,OAAA;QAAAe,QAAA,EAAQ;MAER;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRrB,WAAW,CAACsB,MAAM,GAAG,CAAC,iBACnBzB,OAAA,CAACN,eAAe;QACZS,WAAW,EAAEA,WAAY;QACzBK,SAAS,EAAEA;MAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,EAGLlB,MAAM,iBAAIN,OAAA,CAACL,YAAY;QAACW,MAAM,EAAEA;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEf;AAACtB,EAAA,CAtCuBD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}